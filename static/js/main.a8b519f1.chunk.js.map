{"version":3,"sources":["api/records.js","history.js","actions/types.js","actions/index.js","components/record/RecordForm.js","components/record/RecordCreate.js","components/record/RecordEdit.js","components/Modal.js","components/record/RecordDelete.js","components/record/RecordList.js","components/GoogleAuth.js","components/Header.js","components/App.js","reducers/AuthReducers.js","reducers/index.js","reducers/streamReducer.js","index.js"],"names":["axios","create","baseURL","createBrowserHistory","SIGN_IN","SIGN_OUT","CREATE_RECORD","FETCH_RECORD","FETCH_RECORDS","DELETE_RECORD","EDIT_RECORD","fetchRecord","id","dispatch","a","record","get","response","type","payload","data","RecordForm","renderInput","input","label","meta","className","error","touched","autoComplete","renderError","onSubmit","formValues","props","this","handleSubmit","Field","name","component","placeholder","React","Component","reduxForm","form","validate","errors","age","email","phone","address","course","feespaid","mothername","fathername","RecordCreate","createRecord","connect","getState","userId","auth","post","history","push","RecordEdit","editRecord","match","params","initialValues","_","pick","state","ownProps","patch","Modal","ReactDOM","createPortal","onClick","onDismiss","e","stopPropagation","title","content","actions","document","querySelector","RecordDelete","Fragment","deleteRecord","to","renderContent","renderActions","delete","RecordList","fetchRecords","currentUserId","map","renderAdmin","isSignedIn","style","textAlign","renderList","renderCreate","Object","values","GoogleAuth","onAuthChange","signIn","currentUser","getId","signOut","onSignInClick","onSignOutClick","window","gapi","load","client","init","clientId","scope","then","auth2","getAuthInstance","listen","renderAuthButton","Header","App","path","exact","RecordShow","INITIAL_STATE","combineReducers","action","formReducer","mapKeys","omit","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","reduxThunk","render"],"mappings":"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","file":"static/js/main.a8b519f1.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport default axios.create({\n    baseURL:'http://localhost:3001',\n});\n\n\n// export default axios.create ({\n//             baseURL:'https://my-json-server.typicode.com'\n// }\n// )  ","import {createBrowserHistory}from 'history';\n\nexport default createBrowserHistory();","export const SIGN_IN = 'SIGN_IN';\nexport const SIGN_OUT = 'SIGN_OUT';\n\n//CRUD\nexport const CREATE_RECORD = 'CREATE_RECORD;'\nexport const FETCH_RECORD= 'FETCH_RECORD';\nexport const FETCH_RECORDS = 'FETCH_RECORDS';\nexport const DELETE_RECORD= 'DELETE_RECORD';\nexport const EDIT_RECORD= 'EDIT_RECORD';\n","\nimport record from '../api/records';\nimport history from '../history';     //my history file\nimport {\n    SIGN_IN,\n    SIGN_OUT,\n    CREATE_RECORD,\n    FETCH_RECORD ,\n    FETCH_RECORDS,\n    DELETE_RECORD,\n    EDIT_RECORD\n} from './types';\nexport const  signIn = (userId)  =>  {\n    return {\n        type:SIGN_IN,\n        payload:userId\n    };\n};\n\nexport const signOut = () => {\n    return {\n        type: SIGN_OUT\n    \n    };\n};\n\n\nexport const  createRecord = formValues =>  async (dispatch ,getState)=> {                     //redux-thunk\n        const { userId } = getState().auth;\n           const response =   await  record.post('/record',{...formValues,userId});                                                                 // post-Create '/record -path to create the form values (title and description)\n        dispatch({type:CREATE_RECORD,payload:response.data}); \n\n        history.push('/');      //programmatic navigation --forcing to go to the  homepage (automatic)\n        };\n\nexport const  fetchRecords  =() => async dispatch => {                       //geting list of records\n    const response = await record.get('/record');\n\n    dispatch({type:FETCH_RECORDS,payload:response.data});\n};\nexport const fetchRecord =(id) => async dispatch => {                    // geting a particular record by refering the id\n    const response = await record.get(`/record/${id}`);\n    dispatch ({type:FETCH_RECORD,payload:response.data})\n};\n\nexport const editRecord = (id,formValues) => async dispatch => {      //updating\n    const response = await record.patch(`/record/${id}`,formValues);\n    dispatch({type:EDIT_RECORD,payload:response.data});\n\n    history.push('/');   // it will navigate automatially to homepage when form submitted\n\n};\nexport const deleteRecord= (id) => async dispatch => {   //destrory\n    await record.delete(`/record/${id}`);\n    dispatch({type:DELETE_RECORD, payload:id});\n\n    history.push('/');   // it will navigate automatially to homepage when form submitted\n};\n","import React from 'react';\nimport {Field,reduxForm} from 'redux-form';    //i using rf\n\nclass RecordForm extends React.Component {\n    renderError({error,touched}) {\n        if(touched && error) {\n            return (\n                <div className=\"ui error message\">\n                    <div className=\"header\">\n                        {error}\n                    </div>\n                </div>\n            );\n        }\n    }\nrenderInput = ({input,label,meta}) => {\n    const className = `field ${meta.error && meta.touched  ?  'error' :  ' ' }`;\n    return (\n    <div className={className}>\n    <label>{label}</label>\n  < input {...input}  autoComplete='on'/>\n  \n            {this.renderError(meta)}\n  </div>\n);\n}\n    \n\n    onSubmit = formValues  => {                       //when user fill\n        this.props.onSubmit(formValues);\n}\n\n    render() {\n        return (\n            <form \n            onSubmit={this.props.handleSubmit(this.onSubmit)}\n            className=\"ui form  error\"\n            >\n                <Field  name=\"name\"  component={this.renderInput} label=\" Name\" placeholder=\"Enter your name\"/>\n                <Field name =\"age\" component={this.renderInput}  label=\"Age\" />\n                <Field name =\"email\" component={this.renderInput}  label=\"E-mail\" />\n                <Field name =\"phone\" type=\"number\" component={this.renderInput}  label=\"Phone number\" />\n                <Field name =\"address\" component={this.renderInput}  label=\"Residential Address\" />\n                <Field name =\"course\" component={this.renderInput}  label=\"Course\" />\n                <Field name =\"feespaid\" component={this.renderInput}  label=\"Fees  paid\" />\n                <Field name =\"mothername\" component={this.renderInput}  label=\"Mother Name\" />\n                <Field name =\"fathername\" component={this.renderInput}  label=\"Father Name\" />\n\n                {/* <Field  name=\"title\" component={this.renderInput} label=\"Enter Title\"/>\n                <Field name =\"description\" component={this.renderInput}  label=\"Enter Description\"/> */}\n                <button className=\"ui button primary\">\n                    Submit\n                </button>\n            </form>\n        );\n    }\n}\n\nconst validate =  (formValues) => {\n    const errors = {};\n\n    if(!formValues.name) {\n        errors.name=\"Please Enter your Name\"\n    }\n    if(!formValues.age) {\n        errors.age =\"Please Enter a Age\";\n    }\n     if(!formValues.email) {\n        errors.email =\"Please your email\";\n    }\n    if(!formValues.phone) {\n        errors.phone =\"Please your phone number\";\n    }\n    if(!formValues.address) {\n        errors.address =\"enter the Address\";\n    }\n    if(!formValues.course) {\n        errors.course=\"choose the Course\";\n    }\n    if(!formValues.feespaid) {\n        errors.feespaid =\"enter the amount\";\n    }\n    if(!formValues.mothername) {\n        errors.mothername =\"Please enter your Mother Name\";\n    }\n    if(!formValues.fathername) {\n        errors.fathername =\"Please enter  your Father Name\";\n    }\n    return errors;\n};\n\n\nexport default reduxForm({                                             /// same as connect ()\n    form: 'recordForm',\n    validate\n})(RecordForm);\n\n\n","\nimport React from 'react';\nimport {connect} from 'react-redux';\n\nimport  {createRecord} from '../../actions';\nimport RecordForm from './RecordForm';\n\nclass RecordCreate extends React.Component {\n    \n    onSubmit = formValues  => {\n        this.props.createRecord(formValues);\n}\n\n    render() {\n        return (\n            <div>\n                <h3>Create a Record </h3>\n                <RecordForm onSubmit={this.onSubmit}/>\n            </div>\n            );\n    }\n}\n\n\nexport default connect(null,{createRecord}) (RecordCreate);\n\n","import  _  from 'lodash';\nimport React from 'react';\nimport {connect} from 'react-redux';\nimport 'antd/dist/antd.css';\nimport {Spin} from 'antd';\n\n\nimport {fetchRecord,editRecord} from '../../actions';\nimport  RecordForm from './RecordForm';\n\nclass RecordEdit extends React.Component {\ncomponentDidMount () {\n    this.props.fetchRecord(this.props.match.params.id);\n}\n\nonSubmit = formValues => {\n\n    this.props.editRecord(this.props.match.params.id,formValues);\n};\n\n    render() {\n\n        if(!this.props.record){\n                return <div><Spin/></div>\n        }\n    return  (\n\n        <div>\n     \n     <h2 className=\" ui header purple\" > CRUD Operations</h2>\n            <h3 className=\" ui header\">Edit a Form</h3>\n            <RecordForm\n            initialValues={\n                _.pick(this.props.record,\n                'name',\n                'age',\n                'email',\n                'phone',\n                'address',\n                'course',\n                'feespaid',\n                'mothername',\n                'fathername',\n                )}    // _. pick helps to pick the specific content (title) in same array\n            onSubmit={this.onSubmit}/>\n            </div>\n    );\n    }\n}\n\n\nconst mapStateToProps = (state,ownProps) => {\n    return {record:state.record[ownProps.match.params.id]};\n}\n\nexport default  connect (mapStateToProps,{fetchRecord,editRecord})(RecordEdit);","import React from 'react';\nimport ReactDOM from 'react-dom';\n\n\nconst Modal = props => {\n    return ReactDOM.createPortal(\n        <div onClick={props.onDismiss}\n         className=\"ui dimmer modals visible active\">\n            <div  onClick={e => e.stopPropagation()}\n            className = \"ui standard modal visible active\">\n                    <div className = \" header\">{props.title}</div>\n                    <div className=\"content\">\n                      {props.content}\n                    </div>\n                    <div className=\"actions\">\n                        {props.actions}\n                    </div>\n            </div>\n        </div>,\n        document.querySelector('#modal')\n    );\n};\n\nexport default Modal;","import React from 'react';\nimport {connect} from 'react-redux';\nimport {Link} from 'react-router-dom';\n\nimport Modal from '../Modal';\nimport history from  '../../history';\nimport {fetchRecord,deleteRecord} from '../../actions';\nclass RecordDelete extends React.Component {\n\n        componentDidMount() {\n          this.props.fetchRecord (this.props.match.params.id)\n        }\n\n     renderActions () {\n         const {id} = this.props.match.params;\n      return ( \n           <React.Fragment>\n            <button onClick={() => this.props.deleteRecord(id)} className=\"ui button negative\">Delete</button>\n            <Link to=\"/\" className=\"ui button\">Cancel</Link>\n        </React.Fragment>\n      );\n    };\n\n    renderContent() {\n        if (!this.props.record) {\n            return 'Are you sure you want to delete this Record ?'\n        }\n\n        return `Are you sure you want to delete this Record with Name: ${this.props.record.name}`\n    }\n\nrender() {\n    return  (\n    \n            <Modal \n            title='Delete record'\n            content={this.renderContent()}\n            actions={this.renderActions()}\n            onDismiss={() => history.push('/')}\n            />\n        \n    );\n};\n}\nconst mapStateToProps = (state,ownProps) => {\n    return {record: state.record[ownProps.match.params.id]}\n};\n\nexport default connect(mapStateToProps,{fetchRecord,deleteRecord}) (RecordDelete);","import React from 'react';\nimport  {Link } from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport {fetchRecords} from '../../actions';\nimport {records} from '../../api/records';\n\n    class RecordList extends React.Component {\n        componentDidMount() {\n            this.props.fetchRecords();\n        }\n        renderAdmin(record) {\n         if(record.userId === this.props.currentUserId)  {                          // condition checking for current user\n                return (\n                <div className=\"right floated content\" >                                  \n                    <Link to={`/record/edit/${record.id}`} className=\"ui button primary\">\n                        Edit\n                    </Link>\n                    <Link to={`/record/delete/${record.id}`} className=\"ui button negative\">\n                        Delete\n                    </Link>\n                </div>\n                );\n            }   \n        }\n        renderList() {   //displaying content to the screen\n                    return this.props.record.map(record => {\n                        return(\n                            <div className=\"item\" key={record.id}>\n                                {this.renderAdmin(record)}\n                                <i className=\"large icon user\"/>\n                                <div className=\"content\">\n                                    <Link to={`/record/edit/${record.id}`} className=\"header\">\n \n                                    Name: {record.name}\n                                    </Link>\n                                    \n                                    <div className=\"header\">\n                                        Age: {record.age} <br/>\n                                        E-mail: {record.email}<br/>\n                                        Phone Number: {record.phone}<br/>\n                                        Address: {record.address}<br/>\n                                        Course: {record.course}<br/>\n                                        Fees Paid: {record.feespaid}<br/>\n                                        Mother Name: {record.mothername}<br/>\n                                        Father Name:{record.fathername}\n                                    </div>\n                                </div>\n\n                            </div>\n                        )\n                    });\n        };\n        renderCreate() {                //btn\n                if(!this.props.isSignedIn) {\n                    return (\n                        <div style={{textAlign:'right'}}>\n                            <Link to=\"/record/new\" className=\"ui button primary\">\n                                Create Record\n                            </Link>\n                        </div>\n                    );\n                }\n        }\n        render() {\n            return (\n                <div>\n                <h2 className=\"ui header purple\"> Records</h2>\n                 <div className =\"ui celled list\">\n                     { this.renderList()}\n                 </div>\n                 {this.renderCreate()}\n                 </div>\n            )\n                }\n    }   \n\nconst mapStateToProps  = (state )=> {\n            return { \n                record: Object.values(state.record),\n                currentUserId:state.auth.userId,\n                isSignedIn: state.auth.isSignedIn\n        };\n            \n        };\n\nexport default connect (mapStateToProps,{fetchRecords}) (RecordList);\n\n// export default connect ({fetchRecord}) (StreamList);","import React from 'react';\nimport {connect} from 'react-redux';\nimport {signIn,signOut} from  '../actions';\n\n\nclass GoogleAuth extends React.Component {\n\n    componentDidMount( ) {\n        window.gapi.load('client:auth2',    () => {\n            window.gapi.client.init({\n                clientId: \n                '526013591845-sj5g24ogdoii33upeindnn8pipbk9gb0.apps.googleusercontent.com',\n                scope:'email' //accessing email\n            }).then( () => {\n                this.auth = window.gapi.auth2.getAuthInstance();\n                this.onAuthChange( this.auth.isSignedIn.get() ) ;  //issiigned in google property\n                this.auth.isSignedIn.listen(this.onAuthChange);\n            });\n        });\n\n    };\n\n        onAuthChange = (isSignedIn)  => {\n            if (isSignedIn) {\n                this.props.signIn(this.auth.currentUser.get().getId());\n            }else {\n                this.props.signOut();\n            }\n        };\n        onSignInClick = () => {\n            this.auth.signIn();\n        };\n        onSignOutClick = ()  => {\n            this.auth.signOut();\n        };\n\n\n\n    renderAuthButton() {\n        if(this.props.isSignedIn === null) {\n            return  null;\n        } else if (this.props.isSignedIn) {\n            return (\n                <button onClick={this.onSignOutClick} className=\"ui red google button\">\n                    <i className=\"google icon\"/>\n                        Sign Out\n                </button>\n            )\n        } else {\n            return (\n            <button onClick={this.onSignInClick} className=\"ui red google button\">\n                <i className=\"google icon\"/>\n                Sign In with Google\n            </button>\n            )\n        }\n    }\n    render() {\n        return <div>{this.renderAuthButton()}</div>\n    }\n}\n\nconst  mapStateToProps = (state) => {\n    return { isSignedIn: state.auth.isSignedIn };\n};\n\nexport default connect(\n    mapStateToProps,\n    {  signIn,signOut}\n    ) ( GoogleAuth);","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport GoogleAuth from './GoogleAuth';\n\nconst Header = ()  => {\n    return  (\n\n      <div className =\"ui secondary pointing menu\">\n            <Link to=\"/\" className=\"item\">\n                CRUD\n            </Link>\n          <div className = \"right menu\">\n                <Link to=\"/\" className=\"item\">\n                    All Records\n                    </Link>\n                    <GoogleAuth />\n          </div>\n\n    \n    </div>\n    );\n};\n\nexport default Header;","\nimport React from  'react';\nimport {Router,Route,Switch} from 'react-router-dom';\n\n\nimport RecordCreate from './record/RecordCreate';\nimport RecordEdit from './record/RecordEdit';\nimport RecordDelete from './record/RecordDelete';\nimport RecordList from './record/RecordList';\nimport RecordShow from './record/RecordShow';\nimport Header from './Header';\nimport history from '../history';\n\nconst App = () => {\n    return  (\n    \n            <div className =\"ui container\">\n                    \n        <Router history={history}>                                                         \n        <div>\n        <Header />\n        <Switch>\n            <Route path =\"/\" exact component = {RecordList}/>\n            <Route path =\"/record/new\" exact component = {RecordCreate}/>\n            <Route path =\"/record/edit/:id\" exact component = {RecordEdit}/>\n            <Route path =\"/record/delete/:id\" exact component = {RecordDelete}/>\n            <Route path =\"/record/:id\" exact component = {RecordShow}/>\n        </Switch>\n            </div>\n\n        </Router>\n    \n        </div>\n    );\n};\n\nexport default App;                         ","import {SIGN_IN , SIGN_OUT } from '../actions/types';\nconst INITIAL_STATE = {\n    isSignedIn:null,\n    userId:null,\n};\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default (state = INITIAL_STATE,action) => {\n    switch (action.type) {\n        case SIGN_IN:    //variable\n                return{...state,isSignedIn:true, userId: action.payload};\n\n        case  SIGN_OUT:     // variable \n                return {...state,isSignedIn:false,userId:null};\n        default: \n        return state;\n    }\n};","import {combineReducers} from 'redux';\nimport  {reducer as formReducer} from 'redux-form';\nimport authReducer from './AuthReducers';\nimport recordReducer from './streamReducer';\n\nexport default  combineReducers({\n    auth:authReducer,\n    form: formReducer,\n    record:recordReducer,\n});","import _ from 'lodash';\nimport {\n    FETCH_RECORD ,\n    FETCH_RECORDS,\n    DELETE_RECORD,\n    EDIT_RECORD, \n    CREATE_RECORD\n} from'../actions/types';\n\n//object aproach wit new es2015 syntax\nexport default (state = {},action ) => {\n    switch(action.type) {                                                              //telling that streamed id is equal to payloadID\n        case FETCH_RECORDS: \n        return {...state,  ..._.mapKeys(action.payload, 'id')};\n        case FETCH_RECORD:\n            return {...state,[action.payload.id]: action.payload};\n        case CREATE_RECORD:\n            return {...state,[action.payload.id]:action.payload};\n            case EDIT_RECORD:\n                return {...state,[action.payload.id]: action.payload} ;\n             case DELETE_RECORD:\n                 return  _.omit(state,action.payload) ;\n                default:\n                    return state;\n    }\n};\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\nimport {createStore,applyMiddleware,compose} from 'redux';\nimport reduxThunk from  'redux-thunk';\n\nimport App from './components/App';\nimport reducers from './reducers';\n\nconst  composeEnhancers = window. __REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n    reducers,\n    composeEnhancers(applyMiddleware(reduxThunk))\n    );\nReactDOM.render(\n\n<Provider store={store}>\n<App />  \n</Provider>,\n\ndocument.querySelector('#root'));"],"sourceRoot":""}