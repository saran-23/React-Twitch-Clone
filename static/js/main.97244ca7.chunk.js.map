{"version":3,"sources":["api/streams.js","history.js","actions/types.js","actions/index.js","components/streams/StreamForm.js","components/streams/StreamCreate.js","components/streams/StreamEdit.js","components/Modal.js","components/streams/StreamDelete.js","components/streams/StreamList.js","components/streams/StreamShow.js","components/GoogleAuth.js","components/Header.js","components/App.js","reducers/AuthReducers.js","reducers/index.js","reducers/streamReducer.js","index.js"],"names":["axios","create","baseURL","createBrowserHistory","SIGN_IN","SIGN_OUT","CREATE_STREAM","FETCH_STREAM","FETCH_STREAMS","DELETE_STREAM","EDIT_STREAM","fetchStream","id","dispatch","a","streams","get","response","type","payload","data","SteamForm","renderInput","input","label","meta","className","error","touched","autoComplete","renderError","onSubmit","formValues","props","this","handleSubmit","Field","name","component","placeholder","React","Component","reduxForm","form","validate","errors","age","email","phone","address","course","feespaid","mothername","Fathername","StreamCreate","createStream","StreamForm","connect","getState","userId","auth","post","history","push","StreamEdit","formvalues","editStream","match","params","stream","initialValues","_","pick","state","ownProps","patch","Modal","ReactDOM","createPortal","onClick","onDismiss","e","stopPropagation","title","content","actions","document","querySelector","StreamDelete","Fragment","deleteStream","to","renderContent","renderActions","delete","StreamList","fetchStreams","currentUserId","map","renderAdmin","fathername","isSignedIn","style","textAlign","renderList","renderCreate","Object","values","StreamShow","videoRef","createRef","buildPlayer","player","destroy","flv","createPlayer","url","attachMediaElement","current","load","description","ref","width","controls","GoogleAuth","onAuthChange","signIn","currentUser","getId","signOut","onSignInClick","onSignOutClick","window","gapi","client","init","clientId","scope","then","auth2","getAuthInstance","listen","renderAuthButton","Header","color","App","path","exact","INITIAL_STATE","combineReducers","action","formReducer","mapKeys","omit","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","reduxThunk","render"],"mappings":"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","file":"static/js/main.97244ca7.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport default axios.create({\n    baseURL: ' http://localhost:3001',\n});\n","import {createBrowserHistory }from 'history';\n\nexport default createBrowserHistory();","export const SIGN_IN = 'SIGN_IN';\nexport const SIGN_OUT = 'SIGN_OUT';\n\n//CRUD\nexport const CREATE_STREAM = 'CREATE_STREAM;'\nexport const FETCH_STREAM = 'FETCH_STREAM';\nexport const FETCH_STREAMS = 'FETCH_STREAMS';\nexport const DELETE_STREAM = 'DELETE_STREAM';\nexport const EDIT_STREAM = 'EDIT_STREAM';\n","\nimport streams from '../api/streams';\nimport history from '../history';     //my history file\nimport {\n    SIGN_IN,\n    SIGN_OUT,\n    CREATE_STREAM,\n    FETCH_STREAM ,\n    FETCH_STREAMS,\n    DELETE_STREAM,\n    EDIT_STREAM \n} from './types';\nexport const  signIn = (userId)  =>  {\n    return {\n        type:SIGN_IN,\n        payload:userId\n    };\n};\n\nexport const signOut = () => {\n    return {\n        type: SIGN_OUT\n    \n    };\n};\n\n\nexport const  createStream = formValues =>  async (dispatch ,getState)=> {                     //redux-thunk\n        const { userId } = getState().auth;\n           const response =   await  streams.post('/streams',{...formValues,userId});                                                                 // post-Create '/streams -path to create the form values (title and description)\n        dispatch({type:CREATE_STREAM,payload:response.data}); \n\n        history.push('/');      //programmatic navigation --forcing to go to the  homepage (automatic)\n        };\n\nexport const  fetchStreams   =() => async dispatch => {                       //geting list of records\n    const response = await streams.get('/streams');\n\n    dispatch({type:FETCH_STREAMS,payload:response.data});\n};\nexport const fetchStream  =(id) => async dispatch => {                    // geting a particular record by refering the id\n    const response = await streams.get(`/streams/${id}`);\n\n    dispatch ({type:FETCH_STREAM,payload:response.data})\n};\n\nexport const editStream = (id,formValues) => async dispatch => {      //updating\n    const response = await streams.patch(`/streams/${id}`,formValues);\n    dispatch({type:EDIT_STREAM,payload:response.data});\n\n    history.push('/');   // it will navigate automatially to homepage when form submitted\n\n};\nexport const deleteStream = (id) => async dispatch => {   //destrory\n    await streams.delete(`/streams/${id}`);\n    dispatch({type:DELETE_STREAM, payload:id});\n    \n    history.push('/');   // it will navigate automatially to homepage when form submitted\n};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","\nimport React from 'react';\nimport {Field,reduxForm} from 'redux-form';    //i using rf \n\nclass SteamForm extends React.Component {\n    renderError({error,touched}) {\n        if(touched && error) {\n            return (\n                <div className=\"ui error message\">\n                    <div className=\"header\">\n                        {error}\n                    </div>\n                </div>\n            );\n        }\n    }\nrenderInput = ({input,label,meta}) => {\n    const className = `field ${meta.error && meta.touched  ?  'error' :  ' ' }`;\n    return (\n    <div className={className}>\n    <label>{label}</label>\n  < input {...input}  autoComplete='on'/>\n  \n            {this.renderError(meta)}\n  </div>\n);\n}\n    \n\n    onSubmit = formValues  => {                       //when user fill\n        this.props.onSubmit(formValues);\n}\n\n    render() {\n        return (\n            <form \n            onSubmit={this.props.handleSubmit(this.onSubmit)}\n            className=\"ui form  error\"\n            >\n                <Field  name=\"name\"  component={this.renderInput} label=\" Name\" placeholder=\"Enter your name\"/>\n                <Field name =\"age\" component={this.renderInput}  label=\"Age\" />\n                <Field name =\"email\" component={this.renderInput}  label=\"E-mail\" />\n                <Field name =\"phone\" type=\"number\" component={this.renderInput}  label=\"Phone number\" />\n                <Field name =\"address\" component={this.renderInput}  label=\"Residential Address\" />\n                <Field name =\"course\" component={this.renderInput}  label=\"Course\" />\n                <Field name =\"feespaid\" component={this.renderInput}  label=\"Fees  paid\" />\n                <Field name =\"mothername\" component={this.renderInput}  label=\"Mother Name\" />\n                <Field name =\"fathername\" component={this.renderInput}  label=\"Father Name\" />\n\n                {/* <Field  name=\"title\" component={this.renderInput} label=\"Enter Title\"/>\n                <Field name =\"description\" component={this.renderInput}  label=\"Enter Description\"/> */}\n                <button className=\"ui button primary\">\n                    Submit\n                </button>\n            </form>\n        );\n    }\n}\n\nconst validate =  (formValues) => {\n    const errors = {};\n\n    if(!formValues.name) {\n        errors.name=\"Please Enter your Name\"\n    }\n    if(!formValues.age) {\n        errors.age =\"Please Enter a Age\";\n    }\n     if(!formValues.email) {\n        errors.email =\"Please your email\";\n    }\n    if(!formValues.phone) {\n        errors.phone =\"Please your phone number\";\n    }\n    if(!formValues.address) {\n        errors.address =\"enter the Address\";\n    }\n    if(!formValues.course) {\n        errors.course=\"choose the Course\";\n    }\n    if(!formValues.feespaid) {\n        errors.feespaid =\"enter the amount\";\n    }\n    if(!formValues.mothername) {\n        errors.mothername =\"Please enter your Mother Name\";\n    }\n    if(!formValues.Fathername) {\n        errors.Fathername =\"Please enter  your Father Name\";\n    }\n    return errors;\n};\n\n\nexport default reduxForm({                                             /// same as connect ()\n    form: 'steamForm',\n    validate\n})(SteamForm);\n\n\n","\nimport React from 'react';\nimport {connect} from 'react-redux';\n\nimport  {createStream} from '../../actions';\nimport StreamForm from './StreamForm';\n\nclass StreamCreate extends React.Component {\n    \n    onSubmit = formValues  => {\n        this.props.createStream(formValues);\n}\n\n    render() {\n        return (\n            <div>\n                <h3>Create a Stream </h3>\n                <StreamForm onSubmit={this.onSubmit}/>\n            </div>\n            );\n    }\n}\n\n\nexport default connect(null,{createStream}) (StreamCreate);\n\n","import  _  from 'lodash';\nimport React from 'react';\nimport {connect} from 'react-redux';\nimport 'antd/dist/antd.css'; // \nimport {Spin} from 'antd';\n\n\nimport {fetchStream,editStream} from '../../actions';\nimport  StreamForm from './StreamForm';\nclass  StreamEdit extends React.Component {\ncomponentDidMount () {\n    this.props.fetchStream(this.props.match.params.id);\n}\n\nonSubmit = formvalues => {\n    this.props.editStream(this.props.match.params.id,formvalues);\n};\n\n    render() {\n        if(!this.props.stream){\n                return <div><Spin></Spin></div>\n        }\n    return  (\n\n \n        <div>\n     \n     <h2 className=\" ui header purple\" > CRUD Operations</h2>\n            <h3 className=\" ui header\">Edit a Form</h3>\n            <StreamForm \n            initialValues={_.pick(this.props.stream, 'name','age','email','phone','address','course','feespaid','mothername','fathername',)}    // _. pick helps to pick the specific content (title) in same array\n            onSubmit={this.onSubmit}/>\n            </div>\n    );\n    }\n}\n\n\nconst mapStateToProps = (state,ownProps) => {\n  \n    return {stream:state.stream[ownProps.match.params.id]};\n}\n\nexport default  connect (mapStateToProps,{fetchStream,editStream})(StreamEdit);","import React from 'react';\nimport ReactDOM from 'react-dom';\n\n\nconst Modal = props => {\n    return ReactDOM.createPortal(\n        <div onClick={props.onDismiss}\n         className=\"ui dimmer modals visible active\">\n            <div  onClick={e => e.stopPropagation()}\n            className = \"ui standard modal visible active\">\n                    <div className = \" header\">{props.title}</div>\n                    <div className=\"content\">\n                      {props.content}\n                    </div>\n                    <div className=\"actions\">\n                        {props.actions}\n                    </div>\n            </div>\n        </div>,\n        document.querySelector('#modal')\n    );\n};\n\nexport default Modal;","\nimport React from 'react';\nimport {connect} from 'react-redux';\nimport {Link} from 'react-router-dom';\n\nimport Modal from '../Modal';\nimport history from  '../../history';\nimport {fetchStream,deleteStream} from '../../actions';\nclass StreamDelete extends React.Component {\n\n        componentDidMount() {\n          this.props.fetchStream (this.props.match.params.id)\n        }\n\n     renderActions () {\n         const {id} = this.props.match.params;\n      return ( \n           <React.Fragment>\n            <button onClick={() => this.props.deleteStream(id)} className=\"ui button negative\">Delete</button>\n            <Link to=\"/\" className=\"ui button\">Cancel</Link>\n        </React.Fragment>\n      );\n    };\n\n    renderContent() {\n        if (!this.props.stream) {\n            return 'Are you sure you want to delete this stream ?'\n        }\n\n        return `Are you sure you want to delete this stream with Name: ${this.props.stream.name}`\n    }\n\nrender() {\n    return  (\n    \n            <Modal \n            title='Delete Stream'\n            content={this.renderContent()}\n            actions={this.renderActions()}\n            onDismiss={() => history.push('/')}\n            />\n        \n    );\n};\n}\nconst mapStateToProps = (state,ownProps) => {\n    return {stream: state.stream[ownProps.match.params.id]}\n};\n\nexport default connect(mapStateToProps,{fetchStream,deleteStream}) (StreamDelete);","import React from 'react';\nimport  {Link } from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport {fetchStreams} from '../../actions';\n\n    class StreamList extends React.Component {\n        componentDidMount() {\n            this.props.fetchStreams();\n        }\n        renderAdmin(stream) {\n         if(stream.userId === this.props.currentUserId)  {                          // condition checking for current user\n                return (\n                <div className=\"right floated content\" >                                  \n                    <Link to={`/streams/edit/${stream.id}`} className=\"ui button primary\">\n                        Edit\n                    </Link>\n                    <Link to={`/streams/delete/${stream.id}`} className=\"ui button negative\">\n                        Delete\n                    </Link>\n                </div>\n                );\n            }   \n        }\n        renderList() {   //displaying content to the screen\n                    return this.props.streams.map(stream => {\n                        return(\n                            <div className=\"item\" key={stream.id}>\n                                {this.renderAdmin(stream)}\n                                <i className=\"  large icon user\"/>\n                                <div className=\"content\">\n                                    <Link to={`/streams/edit/${stream.id}`} className=\"header\">\n \n                                    Name: {stream.name}\n                                    </Link>\n                                    \n                                    <div className=\"header\">\n                                        Age: {stream.age} <br/>\n                                        E-mail: {stream.email}<br/>\n                                        Phone Number: {stream.phone}<br/>\n                                        Address: {stream.address}<br/>\n                                        Course: {stream.course}<br/>\n                                        Fees Paid: {stream.feespaid}<br/>\n                                        Mother Name: {stream.mothername}<br/>\n                                        Father Name:{stream.fathername}\n                                    </div>\n                                </div>\n\n                            </div>\n                        )\n                    });\n        };\n        renderCreate() {                //btn\n                if(this.props.isSignedIn) {\n                    return (\n                        <div style={{textAlign:'right'}}>\n                            <Link to=\"/streams/new\" className=\"ui button primary\">\n                                Create Stream\n                            </Link>\n                        </div>\n                    );\n                }\n        }\n        render() {\n            return (\n                <div>\n                <h2 className=\"ui header purple\"> Records</h2>\n                 <div className =\"ui celled list\">\n                     { this.renderList()}\n                 </div>\n                 {this.renderCreate()}\n                 </div>\n            )\n                }\n    }   \n\nconst mapStateToProps  = (state )=> {\n            return { \n                streams: Object.values(state.stream),\n                currentUserId:state.auth.userId,\n                isSignedIn: state.auth.isSignedIn\n        };\n            \n        };\n\nexport default connect (mapStateToProps,{fetchStreams}) (StreamList);","import React from 'react';\nimport {connect} from 'react-redux';\nimport flv from 'flv.js';\nimport {Spin} from 'antd';\nimport 'antd/dist/antd.css';\n\nimport {fetchStream} from '../../actions';    //shows list of records\n\n\nclass StreamShow extends React.Component {\nconstructor (props) {\n    super(props);\n\n    this.videoRef = React.createRef();\n}\n\n    componentDidMount(){\n        const {id} = this.props.match.params; \n    this.props.fetchStream(id);\n        this.buildPlayer();\n}\ncomponentDidUpdate() {\n    this.buildPlayer();\n}\n\ncomponentWillUnmount() {\n    \n    this.player.destroy();\n}\n\n\nbuildPlayer() {\n    if(this.player || !this.props.stream) {\n        return;\n    }\n    const {id} = this.props.match.params;\n    this.player = flv.createPlayer({\n        type: 'flv',\n        url: `http://localhost:8000/live/${id}.flv`\n    });\n    this.player.attachMediaElement(this.videoRef.current);       \n    this.player.load();\n\n}\n\nrender() {\n    if (this.props.stream) {\n        return <div><Spin/></div>\n    }\n    const { title,description} = this.props.stream;\n    return  (\n    <div>\n        <video  ref={this.videoRef}  style={{ width: '100%' }} controls /> \n        <h1>{title}</h1>\n        <h5>{description}</h5>\n    </div>   \n    )\n}\n}\nconst mapStateToProps = (state,ownProps) => {\n    return {stream: state.stream[ownProps.match.params.id]} ;\n}\nexport default connect(mapStateToProps,{fetchStream}) (StreamShow);","import React from 'react';\nimport {connect} from 'react-redux';\nimport {signIn,signOut} from  '../actions';\n\n\nclass GoogleAuth extends React.Component {\n\n    componentDidMount( ) {\n        window.gapi.load('client:auth2',    () => {\n            window.gapi.client.init({\n                clientId: \n                '526013591845-sj5g24ogdoii33upeindnn8pipbk9gb0.apps.googleusercontent.com',\n                scope:'email' //accessing email\n            }).then( () => {\n                this.auth = window.gapi.auth2.getAuthInstance();\n                this.onAuthChange( this.auth.isSignedIn.get() ) ;  //issiigned in google property\n                this.auth.isSignedIn.listen(this.onAuthChange);\n            });\n        });\n\n    };\n\n        onAuthChange = (isSignedIn)  => {\n            if (isSignedIn) {\n                this.props.signIn(this.auth.currentUser.get().getId());\n            }else {\n                this.props.signOut();\n            }\n        };\n        onSignInClick = () => {\n            this.auth.signIn();\n        };\n        onSignOutClick = ()  => {\n            this.auth.signOut();\n        };\n\n\n\n    renderAuthButton() {\n        if(this.props.isSignedIn === null) {\n            return  null;\n        } else if (this.props.isSignedIn) {\n            return (\n                <button onClick={this.onSignOutClick} className=\"ui red google button\">\n                    <i className=\"google icon\"/>\n                        Sign Out\n                </button>\n            )\n        } else {\n            return (\n            <button onClick={this.onSignInClick} className=\"ui red google button\">\n                <i className=\"google icon\"/>\n                Sign In with Google\n            </button>\n            )\n        }\n    }\n    render() {\n        return <div>{this.renderAuthButton()}</div>\n    }\n}\n\nconst  mapStateToProps = (state) => {\n    return { isSignedIn: state.auth.isSignedIn };\n};\n\nexport default connect(\n    mapStateToProps,\n    {  signIn,signOut}\n    ) ( GoogleAuth);","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport GoogleAuth from './GoogleAuth';\n\nconst Header = ()  => {\n    return  (\n    \n      <div className =\"ui secondary pointing menu\">\n            <Link to=\"/\" className=\"item \" style={{color:'grey'}}>\n                CRUD\n            </Link>\n          <div className = \"right menu\">\n                <Link to=\"/\" className=\"item\">\n                    All Records\n                    </Link>\n                    <GoogleAuth />\n          </div>\n\n    \n    </div>\n    );\n};\n\nexport default Header;","\nimport React from  'react';\nimport {Router,Route,Switch} from 'react-router-dom';\n\n\nimport StreamCreate from './streams/StreamCreate';\nimport StreamEdit from './streams/StreamEdit';\nimport StreamDelete from './streams/StreamDelete';\nimport StreamList from './streams/StreamList';\nimport StreamShow from './streams/StreamShow';\nimport Header from './Header';\nimport history from '../history';\n\nconst App = () => {\n    return  (\n    \n            <div className =\"ui container\">\n                    \n        <Router history={history}>                                                         \n        <div>\n        <Header />\n        <Switch>\n            <Route path =\"/\" exact component = {StreamList}/>\n            <Route path =\"/streams/new\" exact component = {StreamCreate}/>\n            <Route path =\"/streams/edit/:id\" exact component = {StreamEdit}/>\n            <Route path =\"/streams/delete/:id\" exact component = {StreamDelete}/>\n            <Route path =\"/streams/:id\" exact component = {StreamShow}/>\n        </Switch>\n            </div>\n\n        </Router>\n    \n        </div>\n    );\n};\n\nexport default App;                         ","import {SIGN_IN , SIGN_OUT } from '../actions/types';\nconst INITIAL_STATE = {\n    isSignedIn:null,\n    userId:null,\n};\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default (state = INITIAL_STATE,action) => {\n    switch (action.type) {\n        case SIGN_IN:    //variable\n                return{...state,isSignedIn:true, userId: action.payload};\n\n        case  SIGN_OUT:     // variable \n                return {...state,isSignedIn:false,userId:null};\n        default: \n        return state;\n    }\n};","import {combineReducers} from 'redux';\nimport  {reducer as formReducer} from 'redux-form';\nimport authReducer from './AuthReducers';\nimport streamReducer from './streamReducer';\n\nexport default  combineReducers({\n    auth:authReducer,\n    form: formReducer,\n    stream:streamReducer,\n});","import _ from 'lodash';\nimport {\n    FETCH_STREAM ,\n    FETCH_STREAMS,\n    DELETE_STREAM,\n    EDIT_STREAM, \n    CREATE_STREAM\n} from'../actions/types';\n\n//object aproach wit new es2015 syntax\nexport default (state = {},action ) => {\n    switch(action.type) {                                                              //telling that streamed id is equal to payloadID\n        case FETCH_STREAMS: \n        return {...state,  ..._.mapKeys(action.payload, 'id')};\n        case FETCH_STREAM:\n            return {...state,[action.payload.id]: action.payload};\n        case CREATE_STREAM:\n            return {...state,[action.payload.id]:action.payload};\n            case EDIT_STREAM:\n                return {...state,[action.payload.id]: action.payload} ;\n             case DELETE_STREAM:\n                 return  _.omit(state,action.payload) ;;  \n                default:\n                    return state;\n    }\n};\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\nimport {createStore,applyMiddleware,compose} from 'redux';\nimport reduxThunk from  'redux-thunk';\n\nimport App from './components/App';\nimport reducers from './reducers';\n\nconst  composeEnhancers = window. __REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n    reducers,\n    composeEnhancers(applyMiddleware(reduxThunk))\n    );\nReactDOM.render(\n\n<Provider store={store}>\n<App />  \n</Provider>,\n\ndocument.querySelector('#root'));"],"sourceRoot":""}